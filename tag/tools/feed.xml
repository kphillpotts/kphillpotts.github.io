<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="/tag/tools/feed.xml" rel="self" type="application/atom+xml" />
  <link href="/" rel="alternate" type="text/html" />
  <updated>2019-02-26T10:09:56+11:00</updated>
  <id>/tag/tools/feed.xml</id>

  
  
  

  
    <title type="html">Kym’s Blog | </title>
  

  
    <subtitle>I write about Azure, Xamarin.Forms, Connected Apps and whatever else might be on my mind.</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Emacs key mappings for Xamarin Studio on Mac</title>
      <link href="/emacs-key-mappings-for-xamarin-studio-on-mac/" rel="alternate" type="text/html" title="Emacs key mappings for Xamarin Studio on Mac" />
      <published>2015-08-12T09:52:32+10:00</published>
      <updated>2015-08-12T09:52:32+10:00</updated>
      <id>/emacs-key-mappings-for-xamarin-studio-on-mac</id>
      <content type="html" xml:base="/emacs-key-mappings-for-xamarin-studio-on-mac/">&lt;p style=&quot;text-align: left;&quot;&gt;
  One of the great things about my job instructing at Xamarin is the diverse set of questions I get exposure to via all the people who attend Xamarin University.
&lt;/p&gt;

&lt;p style=&quot;text-align: left;&quot;&gt;
  For example, just the other day I was in a class with a guy by the name of Richard Logwood who was curious about Emacs key bindings for Xamarin Studio.
&lt;/p&gt;

&lt;p style=&quot;text-align: left;&quot;&gt;
  &lt;!--more--&gt;
&lt;/p&gt;

&lt;p style=&quot;text-align: left;&quot;&gt;
  &lt;a href=&quot;https://i2.wp.com/res.cloudinary.com/dlstb15av/image/upload/v1506381688/real_programmers_ibc8t3.png&quot;&gt;&lt;img class=&quot;aligncenter size-medium wp-image-5614&quot; src=&quot;https://i2.wp.com/res.cloudinary.com/dlstb15av/image/upload/h_384,w_700/v1506381688/real_programmers_ibc8t3.png?resize=700%2C384&quot; alt=&quot;real_programmers&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p style=&quot;text-align: left;&quot;&gt;
  I&amp;#8217;m not an Emacs guys (I&amp;#8217;ve only got 10 fingers)  and so it&amp;#8217;s not something I&amp;#8217;ve personally looked into.   But Richard emailed me back to share some info he found about configuring Emacs bindings.
&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p style=&quot;padding-left: 30px;&quot;&gt;
  &lt;em&gt;Hi Kym,&lt;/em&gt;
&lt;/p&gt;

&lt;p style=&quot;padding-left: 30px;&quot;&gt;
  &lt;em&gt;Enjoyed your class so much, thank you!&lt;/em&gt;
&lt;/p&gt;

&lt;p style=&quot;padding-left: 30px;&quot;&gt;
  &lt;em&gt;Writing to share, giving back a little. You&amp;#8217;ll recall my interest in Emacs key mappings for Xam Studio on Mac. I was working to set this up today and ran into some difficulties (couldn&amp;#8217;t remap Control-A and Control-V as they kept being interpreted Command-A and Command-V in the re-mapper).&lt;/em&gt;
&lt;/p&gt;

&lt;p style=&quot;padding-left: 30px;&quot;&gt;
  &lt;em&gt;While I&amp;#8217;m not/wasn&amp;#8217;t sure if this is on my side (didn&amp;#8217;t make sense as I was able to map other Control key combinations without a problem); I started digging into my own Mac setup, which doesn&amp;#8217;t get enough attention.&lt;/em&gt;
&lt;/p&gt;

&lt;p style=&quot;padding-left: 30px;&quot;&gt;
  &lt;em&gt;I double checked all my modifier key settings in User Prefs and then took a close look at my Karabiner (https://pqrs.org/osx/karabiner/) setup. In so doing I discovered some very nice pre-configured settings to create Emacs bindings across the Mac for every application!&lt;/em&gt;
&lt;/p&gt;

&lt;p style=&quot;padding-left: 30px;&quot;&gt;
  &lt;em&gt;Another nice feature I found was the ability to configure the key repeat and delay parameters, which have always been annoyingly slow for me on the Mac.&lt;/em&gt;
&lt;/p&gt;

&lt;p style=&quot;padding-left: 30px;&quot;&gt;
  &lt;em&gt;See the attached screen shot below.&lt;/em&gt;
&lt;/p&gt;

&lt;p style=&quot;padding-left: 30px;&quot;&gt;
  &lt;em&gt;Cheers,&lt;/em&gt;&lt;br /&gt; &lt;em&gt; Richard&lt;/em&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://i1.wp.com/res.cloudinary.com/dlstb15av/image/upload/v1506381690/Karabinar_am5t8o.png&quot;&gt;&lt;img class=&quot; size-full wp-image-5607 alignnone&quot; src=&quot;https://i1.wp.com/res.cloudinary.com/dlstb15av/image/upload/v1506381690/Karabinar_am5t8o.png?resize=666%2C638&quot; alt=&quot;Karabinar&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;So I thought i would share it here in case anyone else is crazy enough to try and configure Emacs bindings for Xamarin Studio.&lt;/p&gt;

&lt;p&gt;Thanks for sharing Richard, and my hat goes off to you for your commitment to Emacs!&lt;/p&gt;

&lt;p&gt;I do love the Xamarin Community!&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Kym</name>
        
        
      </author>

      

      
        <category term="development" />
      
        <category term="tools" />
      
        <category term="xamarin" />
      

      
        <summary type="html">One of the great things about my job instructing at Xamarin is the diverse set of questions I get exposure to via all the people who attend Xamarin University.</summary>
      

      
      
        
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://res.cloudinary.com/dlstb15av/image/upload/v1506381690/emacs_user_at_work_by_earlcolour-d38aj2x_tvotjc.jpg" />
      
    </entry>
  
    <entry>
      <title type="html">Xamarin.Forms Productivity Tools</title>
      <link href="/xamarin-forms-tools/" rel="alternate" type="text/html" title="Xamarin.Forms Productivity Tools" />
      <published>2015-01-24T05:15:13+11:00</published>
      <updated>2015-01-24T05:15:13+11:00</updated>
      <id>/xamarin-forms-tools</id>
      <content type="html" xml:base="/xamarin-forms-tools/">&lt;p&gt;There are lots of great extensions out there to help you out with your Xamarin.Forms development.  Here are some of my favourites.&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;mobile-essentials&quot;&gt;&lt;a title=&quot;Mobile Essentials&quot; href=&quot;http://www.cazzulino.com/mobileessentials.html&quot; target=&quot;_blank&quot;&gt;Mobile Essentials&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Resharper now has intellisense for XAML Xamarin Forms, but if you don’t roll with R#, you can still get intellisense using the Visual Studio extension called &lt;a title=&quot;Mobile Essentials&quot; href=&quot;http://www.cazzulino.com/mobileessentials.html&quot; target=&quot;_blank&quot;&gt;Mobile Essentials&lt;/a&gt;.  This adds much needed intellisense right into the IDE.&lt;/p&gt;

&lt;h2 id=&quot;xftemplates&quot;&gt;&lt;a title=&quot;XF.Templates&quot; href=&quot;https://github.com/glennstephens/xfTemplates&quot; target=&quot;_blank&quot;&gt;XF.Templates&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;If you use Resharper, the most excellent Xamarin University trainer Glenn Stephens has published a set of Resharper Live Templates for common Xamarin Forms actions.  You can get hold of them over at &lt;a title=&quot;Glenn's Github&quot; href=&quot;https://github.com/glennstephens/xfTemplates&quot; target=&quot;_blank&quot;&gt;Glenn’s Github&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;xaml-regions&quot;&gt;&lt;a title=&quot;XAML Regions&quot; href=&quot;https://visualstudiogallery.msdn.microsoft.com/3c534623-bb05-417f-afc0-c9e26bf0e177&quot; target=&quot;_blank&quot;&gt;XAML Regions&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;If you create Xamarin.Forms code in XAML then this simple extension allows you to define collapsible regions in your XAML.  XAML, as lovely as it is, sometimes gets pretty verbose and hard to navigate, so it’s nice to be able to have collapsible regions to help focus.  The regions are done via comments so if somebody else is looking at your XAML code and doesn’t have the extension it will not explode. Available via &lt;a title=&quot;Visual Studio Gallery&quot; href=&quot;https://visualstudiogallery.msdn.microsoft.com/3c534623-bb05-417f-afc0-c9e26bf0e177&quot; target=&quot;_blank&quot;&gt;Visual Studio Gallery&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;xaml-styler&quot;&gt;&lt;a title=&quot;XAML Styler&quot; href=&quot;https://visualstudiogallery.msdn.microsoft.com/3de2a3c6-def5-42c4-924d-cc13a29ff5b7&quot; target=&quot;_blank&quot;&gt;XAML Styler&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This plugin does pretty much what it says on the box.  It styles your XAML code into a nice consistent layout every time you save a XAML file.  It’s got loads of customisation options.  I use this on any XAML code I do because it just helps keep everything consistent, even if multiple people are working on the code base. It is also available via &lt;a title=&quot;Visual Studio Gallery&quot; href=&quot;https://visualstudiogallery.msdn.microsoft.com/3de2a3c6-def5-42c4-924d-cc13a29ff5b7&quot; target=&quot;_blank&quot;&gt;Visual Studio Gallery&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;So there’s a few tools to help boost productivity developing Xamarin Forms.  Hit me up in the comments and let me know what your favourite tools are.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Kym</name>
        
        
      </author>

      

      
        <category term="resharper" />
      
        <category term="tools" />
      
        <category term="xamarin.forms" />
      
        <category term="xaml" />
      

      
        <summary type="html">There are lots of great extensions out there to help you out with your Xamarin.Forms development.  Here are some of my favourites.</summary>
      

      
      
        
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://res.cloudinary.com/dlstb15av/image/upload/v1506381713/swiss-army-iphone-case-6_tgtqsw.jpg" />
      
    </entry>
  
</feed>
